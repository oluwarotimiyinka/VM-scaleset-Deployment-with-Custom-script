{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String"
        },
        "osDiskType": {
            "type": "String"
        },
        "virtualNetworkId": {
            "type": "String"
        },
        "virtualNetworkName": {
            "type": "String"
        },
        "networkSecurityGroups": {
            "type": "Array"
        },
        "networkInterfaceConfigurations": {
            "type": "Array"
        },
        "backendPoolName": {
            "type": "String"
        },
        "loadBalancerName": {
            "type": "String"
        },
        "loadbalancingRuleFrontEndPort": {
            "type": "Int"
        },
        "loadbalancingRuleBackendEndPort": {
            "type": "Int"
        },
        "loadbalancingRuleProtocol": {
            "type": "String"
        },
        "InboundNATRuleFrontEndPortRangeStart": {
            "type": "Int"
        },
        "vmName": {
            "type": "String"
        },
        "virtualMachineScaleSetName": {
            "type": "String"
        },
        "instanceCount": {
            "type": "String"
        },
        "instanceSize": {
            "type": "String"
        },
        "platformFaultDomainCount": {
            "type": "String"
        },
        "scaleInPolicy": {
            "type": "Object"
        },
        "upgradePolicy": {
            "type": "String"
        },
        "hibernationEnabled": {
            "type": "Bool"
        },
        "adminUsername": {
            "type": "String"
        },
        "adminPassword": {
            "type": "SecureString"
        },
        "patchMode": {
            "type": "String"
        },
        "enableHotpatching": {
            "type": "Bool"
        },
        "securityType": {
            "type": "String"
        },
        "secureBoot": {
            "type": "Bool"
        },
        "vTPM": {
            "type": "Bool"
        },
        "vnetLocation": {
            "defaultValue": "centralus",
            "type": "String",
            "metadata": {
                "description": "Azure region for the deployment, resource group and resources."
            }
        },
        "vnetExtendedLocation": {
            "defaultValue": {},
            "type": "Object"
        },
        "vnetVirtualNetworkName": {
            "defaultValue": "vnet-centralus",
            "type": "String",
            "metadata": {
                "description": "Name of the virtual network resource."
            }
        },
        "vnetTagsByResource": {
            "defaultValue": {},
            "type": "Object",
            "metadata": {
                "description": "Optional tags for the resources."
            }
        },
        "vnetProperties": {
            "defaultValue": {
                "subnets": [
                    {
                        "name": "snet-centralus-1",
                        "properties": {
                            "addressPrefixes": [
                                "172.16.0.0/24"
                            ]
                        }
                    }
                ],
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/16"
                    ]
                }
            },
            "type": "Object"
        },
        "vnetNatGatewaysWithNewPublicIpAddress": {
            "defaultValue": [],
            "type": "Array"
        },
        "vnetNatGatewaysWithoutNewPublicIpAddress": {
            "defaultValue": [],
            "type": "Array"
        },
        "vnetNatGatewayPublicIpAddressesNewNames": {
            "defaultValue": [],
            "type": "Array",
            "metadata": {
                "description": "Array of public ip addresses for NAT Gateways."
            }
        },
        "vnetNetworkSecurityGroupsNew": {
            "defaultValue": [],
            "type": "Array",
            "metadata": {
                "description": "Array of NAT Gateway objects for subnets."
            }
        },
        "vnetResourceGroupName": {
            "defaultValue": "DevOps",
            "type": "String"
        },
        "vnetDeploymentName": {
            "defaultValue": "network-interface-associated-virtual-network-20241122195117",
            "type": "String"
        }
    },
    "variables": {
        "storageApiVersion": "2021-01-01",
        "networkApiVersion": "2020-11-01",
        "virtualMachineScaleSetApiVersion": "2024-07-01",
        "namingInfix": "[toLower(substring(concat(parameters('virtualMachineScaleSetName'), uniqueString(resourceGroup().id)), 0, 9))]",
        "standardSku": {
            "name": "Standard"
        },
        "vnetStaticAllocation": {
            "publicIPAllocationMethod": "Static"
        },
        "vnetPremiumTier": {
            "tier": "Premium"
        },
        "vnetPublicIpAddressesTags": "[if(contains(parameters('vnetTagsByResource'), 'Microsoft.Network/publicIpAddresses'), parameters('vnetTagsByResource')['Microsoft.Network/publicIpAddresses'], json('{}'))]",
        "vnetNatGatewayTags": "[if(contains(parameters('vnetTagsByResource'), 'Microsoft.Network/natGateways'), parameters('vnetTagsByResource')['Microsoft.Network/natGateways'], json('{}'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkSecurityGroups')[copyIndex()].name]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": "[parameters('networkSecurityGroups')[copyIndex()].rules]"
            },
            "copy": {
                "name": "networkSecurityGroups",
                "count": "[length(parameters('networkSecurityGroups'))]"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2021-05-01",
            "name": "[parameters('loadBalancerName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', parameters('vnetDeploymentName'))]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[concat(parameters('loadBalancerName'), '-frontendconfig01')]",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), 'snet-centralus-1')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[parameters('backendPoolName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[concat(parameters('loadBalancerName'), '-lbrule01')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('loadBalancerName'), concat(parameters('loadBalancerName'), '-frontendconfig01'))]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), parameters('backendPoolName'))]"
                            },
                            "frontendPort": "[parameters('loadbalancingRuleFrontEndPort')]",
                            "backendPort": "[parameters('loadbalancingRuleBackendEndPort')]",
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 15,
                            "disableOutboundSnat": true,
                            "loadDistribution": "Default",
                            "protocol": "[parameters('loadbalancingRuleProtocol')]",
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('loadBalancerName'), concat(parameters('loadBalancerName'), '-probe01'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[concat(parameters('loadBalancerName'), '-probe01')]",
                        "properties": {
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2,
                            "requestPath": "[if(equals(parameters('loadbalancingRuleProtocol'),'Tcp'), json('null'), '/')]",
                            "port": "[if(equals(parameters('loadbalancingRuleProtocol'), 'Tcp'), parameters('loadbalancingRuleBackendEndPort'), '80')]",
                            "protocol": "[if(equals(parameters('loadbalancingRuleProtocol'),'Tcp'), 'Tcp', 'Http')]"
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[concat(parameters('loadBalancerName'), '-natRule01')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('loadBalancerName'), concat(parameters('loadBalancerName'), '-frontendconfig01'))]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), parameters('backendPoolName'))]"
                            },
                            "protocol": "TCP",
                            "enableFloatingIP": false,
                            "enableTcpReset": false,
                            "backendPort": 3389,
                            "frontendPortRangeStart": "[parameters('InboundNATRuleFrontEndPortRangeStart')]",
                            "frontendPortRangeEnd": "[add(parameters('InboundNATRuleFrontEndPortRangeStart'), if(equals(parameters('instanceCount'), json('null')), 0, 3599))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "[variables('virtualMachineScaleSetApiVersion')]",
            "name": "[parameters('virtualMachineScaleSetName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "networkSecurityGroups",
                "[concat('Microsoft.Resources/deployments/', parameters('vnetDeploymentName'))]",
                "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
            ],
            "sku": {
                "name": "[parameters('instanceSize')]",
                "capacity": "[int(parameters('instanceCount'))]"
            },
            "properties": {
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "fromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "[parameters('osDiskType')]"
                            }
                        },
                        "imageReference": {
                            "publisher": "MicrosoftWindowsServer",
                            "offer": "WindowsServer",
                            "sku": "2019-datacenter-gensecond",
                            "version": "latest"
                        }
                    },
                    "networkProfile": {
                        "networkApiVersion": "[variables('networkApiVersion')]",
                        "copy": [
                            {
                                "name": "networkInterfaceConfigurations",
                                "count": "[length(parameters('networkInterfaceConfigurations'))]",
                                "input": {
                                    "name": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].name]",
                                    "properties": {
                                        "primary": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].primary]",
                                        "enableAcceleratedNetworking": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].enableAcceleratedNetworking]",
                                        "ipConfigurations": [
                                            {
                                                "name": "[concat(take(parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].name, sub(80, length('-defaultIpConfiguration'))), '-defaultIpConfiguration')]",
                                                "properties": {
                                                    "subnet": {
                                                        "id": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].subnetId]"
                                                    },
                                                    "primary": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].primary]",
                                                    "applicationGatewayBackendAddressPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].applicationGatewayBackendAddressPools]",
                                                    "loadBalancerBackendAddressPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].loadBalancerBackendAddressPools]",
                                                    "publicIPAddressConfiguration": "[if( equals( parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].pipName, ''), json('null'), union(json(concat('{\"name\": \"', parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].pipName, '\"}'))\n        ,json('{\"properties\": { \"idleTimeoutInMinutes\": 15}}')))]"
                                                }
                                            }
                                        ],
                                        "networkSecurityGroup": "[if( equals( parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].nsgId, ''), json('null'),json(concat('{\"id\": \"', parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].nsgId, '\"}')))]"
                                    }
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": []
                    },
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": true
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('namingInfix')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "windowsConfiguration": {
                            "provisionVmAgent": true,
                            "enableAutomaticUpdates": true,
                            "patchSettings": {
                                "enableHotpatching": "[parameters('enableHotpatching')]",
                                "patchMode": "[parameters('patchMode')]"
                            }
                        }
                    },
                    "securityProfile": {
                        "securityType": "[parameters('securityType')]",
                        "uefiSettings": {
                            "secureBootEnabled": "[parameters('secureBoot')]",
                            "vTpmEnabled": "[parameters('vTPM')]"
                        }
                    }
                },
                "orchestrationMode": "Flexible",
                "platformFaultDomainCount": "[parameters('platformFaultDomainCount')]",
                "scaleInPolicy": "[parameters('scaleInPolicy')]",
                "upgradePolicy": {
                    "mode": "[parameters('upgradePolicy')]"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[parameters('vnetDeploymentName')]",
            "dependsOn": [
                "natGatewaysWithNewPublicIpAddressCopy",
                "natGatewaysWithoutNewPublicIpAddressCopy",
                "networkSecurityGroupsCopy",
                "natGatewayPublicIpAddressesCopy",
                "natGatewayPublicIpAddressesCopy"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2024-01-01",
                            "name": "[parameters('vnetVirtualNetworkName')]",
                            "location": "[parameters('vnetLocation')]",
                            "extendedLocation": "[if(empty(parameters('vnetExtendedLocation')), json('null'), parameters('vnetExtendedLocation'))]",
                            "tags": "[if(empty(parameters('vnetTagsByResource')), json('{}'), parameters('vnetTagsByResource'))]",
                            "properties": "[parameters('vnetProperties')]"
                        }
                    ]
                }
            },
            "resourceGroup": "[parameters('vnetResourceGroupName')]",
            "copy": {
                "name": "[parameters('vnetDeploymentName')]",
                "count": 1
            }
        },
        {
            "type": "Microsoft.Network/natGateways",
            "apiVersion": "-1",
            "name": "[parameters('vnetNatGatewaysWithoutNewPublicIpAddress')[copyIndex()].name]",
            "location": "[parameters('vnetLocation')]",
            "tags": "[variables('vnetNatGatewayTags')]",
            "sku": "[variables('standardSku')]",
            "properties": "[parameters('vnetNatGatewaysWithoutNewPublicIpAddress')[copyIndex()].properties]",
            "copy": {
                "name": "natGatewaysWithoutNewPublicIpAddressCopy",
                "count": "[length(parameters('vnetNatGatewaysWithoutNewPublicIpAddress'))]"
            },
            "condition": "[greater(length(parameters('vnetNatGatewaysWithoutNewPublicIpAddress')), 0)]"
        },
        {
            "type": "Microsoft.Network/natGateways",
            "apiVersion": "-1",
            "name": "[parameters('vnetNatGatewaysWithNewPublicIpAddress')[copyIndex()].name]",
            "location": "[parameters('vnetLocation')]",
            "dependsOn": [
                "natGatewayPublicIpAddressesCopy"
            ],
            "tags": "[variables('vnetNatGatewayTags')]",
            "sku": "[variables('standardSku')]",
            "properties": "[parameters('vnetNatGatewaysWithNewPublicIpAddress')[copyIndex()].properties]",
            "copy": {
                "name": "natGatewaysWithNewPublicIpAddressCopy",
                "count": "[length(parameters('vnetNatGatewaysWithNewPublicIpAddress'))]"
            },
            "condition": "[greater(length(parameters('vnetNatGatewaysWithNewPublicIpAddress')), 0)]"
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "name": "[parameters('vnetNatGatewayPublicIpAddressesNewNames')[copyIndex()]]",
            "location": "[parameters('vnetLocation')]",
            "tags": "[variables('vnetPublicIpAddressesTags')]",
            "sku": "[variables('standardSku')]",
            "properties": "[variables('vnetStaticAllocation')]",
            "copy": {
                "name": "natGatewayPublicIpAddressesCopy",
                "count": "[length(parameters('vnetNatGatewayPublicIpAddressesNewNames'))]"
            },
            "condition": "[greater(length(parameters('vnetNatGatewayPublicIpAddressesNewNames')), 0)]"
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('vnetNetworkSecurityGroupsNew')[copyIndex()].name]",
            "location": "[parameters('vnetLocation')]",
            "tags": "[if(contains(parameters('vnetTagsByResource'), 'Microsoft.Network/networkSecurityGroups'), parameters('vnetTagsByResource')['Microsoft.Network/networkSecurityGroups'], json('{}'))]",
            "properties": {},
            "copy": {
                "name": "networkSecurityGroupsCopy",
                "count": "[length(parameters('vnetNetworkSecurityGroupsNew'))]"
            },
            "condition": "[greater(length(parameters('vnetNetworkSecurityGroupsNew')), 0)]"
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}

# parameters

{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "value": "centralus"
        },
        "osDiskType": {
            "value": "Premium_LRS"
        },
        "virtualNetworkId": {
            "value": "/subscriptions/9f6fdc24-c117-4b85-a793-4e11d73abc63/resourceGroups/DevOps/providers/Microsoft.Network/virtualNetworks/vnet-centralus"
        },
        "virtualNetworkName": {
            "value": "vnet-centralus"
        },
        "networkSecurityGroups": {
            "value": [
                {
                    "name": "basicNsgvnet-centralus-nic01",
                    "id": "/subscriptions/9f6fdc24-c117-4b85-a793-4e11d73abc63/resourceGroups/DevOps/providers/Microsoft.Network/networkSecurityGroups/basicNsgvnet-centralus-nic01",
                    "rules": [
                        {
                            "name": "HTTP",
                            "properties": {
                                "priority": 300,
                                "protocol": "TCP",
                                "access": "Allow",
                                "direction": "Inbound",
                                "sourceAddressPrefix": "*",
                                "sourcePortRange": "*",
                                "destinationAddressPrefix": "*",
                                "destinationPortRange": "80"
                            }
                        },
                        {
                            "name": "HTTPS",
                            "properties": {
                                "priority": 320,
                                "protocol": "TCP",
                                "access": "Allow",
                                "direction": "Inbound",
                                "sourceAddressPrefix": "*",
                                "sourcePortRange": "*",
                                "destinationAddressPrefix": "*",
                                "destinationPortRange": "443"
                            }
                        },
                        {
                            "name": "RDP",
                            "properties": {
                                "priority": 340,
                                "protocol": "TCP",
                                "access": "Allow",
                                "direction": "Inbound",
                                "sourceAddressPrefix": "*",
                                "sourcePortRange": "*",
                                "destinationAddressPrefix": "*",
                                "destinationPortRange": "3389"
                            }
                        }
                    ]
                }
            ]
        },
        "networkInterfaceConfigurations": {
            "value": [
                {
                    "name": "vnet-centralus-nic01",
                    "primary": true,
                    "subnetId": "/subscriptions/9f6fdc24-c117-4b85-a793-4e11d73abc63/resourceGroups/DevOps/providers/Microsoft.Network/virtualNetworks/vnet-centralus/subnets/snet-centralus-1",
                    "applicationGatewayBackendAddressPools": [],
                    "loadBalancerBackendAddressPools": [
                        {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), parameters('backendPoolName'))]"
                        }
                    ],
                    "applicationSecurityGroups": [],
                    "loadBalancerInboundNatPools": [],
                    "enableAcceleratedNetworking": false,
                    "nsgName": "basicNsgvnet-centralus-nic01",
                    "nsgId": "/subscriptions/9f6fdc24-c117-4b85-a793-4e11d73abc63/resourceGroups/DevOps/providers/Microsoft.Network/networkSecurityGroups/basicNsgvnet-centralus-nic01",
                    "pipName": ""
                }
            ]
        },
        "backendPoolName": {
            "value": "bepool"
        },
        "loadBalancerName": {
            "value": "TitemInternal"
        },
        "loadbalancingRuleFrontEndPort": {
            "value": 80
        },
        "loadbalancingRuleBackendEndPort": {
            "value": 80
        },
        "loadbalancingRuleProtocol": {
            "value": "Tcp"
        },
        "inboundNATRuleFrontEndPortRangeStart": {
            "value": 50000
        },
        "vmName": {
            "value": "Titemscaleset"
        },
        "virtualMachineScaleSetName": {
            "value": "Titemscaleset"
        },
        "instanceCount": {
            "value": "1"
        },
        "instanceSize": {
            "value": "Standard_B1s"
        },
        "platformFaultDomainCount": {
            "value": "1"
        },
        "scaleInPolicy": {
            "value": {
                "rules": [
                    "Default"
                ],
                "forceDeletion": false
            }
        },
        "upgradePolicy": {
            "value": "Manual"
        },
        "hibernationEnabled": {
            "value": false
        },
        "adminUsername": {
            "value": "Titemi"
        },
        "adminPassword": {
            "value": null
        },
        "patchMode": {
            "value": "AutomaticByOS"
        },
        "enableHotpatching": {
            "value": false
        },
        "securityType": {
            "value": "TrustedLaunch"
        },
        "secureBoot": {
            "value": true
        },
        "vTPM": {
            "value": true
        },
        "vnetLocation": {
            "value": "centralus"
        },
        "vnetExtendedLocation": {
            "value": {}
        },
        "vnetVirtualNetworkName": {
            "value": "vnet-centralus"
        },
        "vnetTagsByResource": {
            "value": {}
        },
        "vnetProperties": {
            "value": {
                "subnets": [
                    {
                        "name": "snet-centralus-1",
                        "properties": {
                            "addressPrefixes": [
                                "172.16.0.0/24"
                            ]
                        }
                    }
                ],
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/16"
                    ]
                }
            }
        },
        "vnetNatGatewaysWithNewPublicIpAddress": {
            "value": []
        },
        "vnetNatGatewaysWithoutNewPublicIpAddress": {
            "value": []
        },
        "vnetNatGatewayPublicIpAddressesNewNames": {
            "value": []
        },
        "vnetNetworkSecurityGroupsNew": {
            "value": []
        },
        "vnetResourceGroupName": {
            "value": "DevOps"
        },
        "vnetDeploymentName": {
            "value": "network-interface-associated-virtual-network-20241122195117"
        }
    }
}